<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 指明这个映射文件adminMapper.xml的逻辑路径,如果与接口建立映射，那么逻辑路径应该与接口的物理路径一致-->
<mapper namespace="com.lcvc.guojiaoyuan.yuliaoku.dao.AdminDao">

    <!--==================================基本查询============================-->

    <select id="get"  resultType="Admin">
        select * from admin where username=#{username}
    </select>

   <insert id="save">
          insert into admin(username,password,name,role,createTime)
          values(#{username},#{password},#{name},#{role},#{createTime})
    </insert>

    <update id="update" parameterType="Admin">
        update admin
        <!-- 使用set标签可以将动态的配置SET 关键字，和剔除追加到条件末尾的任何不相关的逗号。 -->
        <set>
            <if test="username!=null and username.length()>0">username=#{username},</if>
            <if test="name!=null and name.length()>0">name=#{name},</if>
            <if test="password!=null and password.length()>0">password=#{password},</if>
            <if test="role!=null">role=#{role},</if>
        </set>
        where username=#{username}
    </update>


    <delete id="delete" >
        delete from admin where username=#{username}
    </delete>

    <delete id="deletes" >
        delete from admin where 1=0
        <if test="array != null and array.length> 0">
            OR username in
            <foreach item="item" collection="array" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </delete>

    <select id="total"  resultType="Integer">
        select count(1) from admin
    </select>

    <select id="readAll" resultType="Admin">
        select * from admin order by createTime asc
    </select>

    <select id="query" resultType="Admin">
        select admin.* from admin
        <include refid="queryWhere"></include>
        order by admin.createTime asc limit #{offset},#{length}
    </select>

    <select id="querySize" resultType="Integer">
        select count(1) from (
        select admin.username from admin
        <include refid="queryWhere"></include>
        ) u
    </select>

    <!--统一查询的条件，方便用于分页等查询，这里提供给query和querySize调用-->
    <sql id="queryWhere">
        <if test="objectQuery!=null">
            <where>
                <if test="objectQuery.username!=null and objectQuery.username.length()>0">
                    <!-- bind，重新定义一个变量，可用于模糊查询等，并且可以直接覆盖原变量 -->
                    <bind name="username" value="'%' + _parameter.objectQuery.username + '%'" />
                    and admin.username like #{username}
                </if>
                <if test="objectQuery.name!=null and objectQuery.name.length()>0">
                    <!-- bind，重新定义一个变量，可用于模糊查询等，并且可以直接覆盖原变量 -->
                    <bind name="name" value="'%' + _parameter.objectQuery.name + '%'" />
                    and admin.name like #{name}
                </if>
                <if test="objectQuery.role!=null">
                    and admin.role=#{objectQuery.role}
                </if>
            </where>
        </if>
    </sql>


</mapper>